generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id             Int                @id @unique @default(autoincrement())
  user_id        BigInt
  start_date     DateTime           @db.Timestamp(6)
  finish_date    DateTime           @db.Timestamp(6)
  duration       Int
  completed      Boolean
  group_activity Boolean
  type           activity_type_enum
  channel_id     BigInt
  data           Json               @db.Json

  @@index([user_id, finish_date])
  @@index([group_activity])
  @@index([completed])
  @@index([user_id, type])
  @@index([finish_date])
  @@map("activity")
}

model ClientStorage {
  id                      String   @id @db.VarChar(19)
  userBlacklist           String[] @default([]) @db.VarChar(19)
  guildBlacklist          String[] @default([]) @db.VarChar(19)
  prices                  Json     @default("{}") @db.Json
  sold_items_bank         Json     @default("{}") @db.Json
  disabled_commands       String[] @db.VarChar(32)
  double_loot_finish_time BigInt   @default(0)
  custom_prices           Json     @default("{}") @db.Json

  @@map("clientStorage")
}

model Guild {
  id               String   @id @db.VarChar(19)
  disabledCommands String[]

  @@map("guilds")
}

model NewUser {
  id            String  @id @db.VarChar(19)
  username      String? @db.VarChar(32)
  pizazz_points Int     @default(0)

  // Relations
  minigame_id  Int?         @unique
  minigame     Minigame?    @relation(fields: [minigame_id], references: [id])
  slayer_tasks SlayerTask[]

  @@map("new_users")
}

model PlayerOwnedHouse {
  user_id            String @id @db.VarChar(19)
  background_id      Int    @default(1)
  altar              Int?
  throne             Int?
  mounted_cape       Int?
  mounted_fish       Int?
  mounted_head       Int?
  mounted_item       Int?
  jewellery_box      Int?
  prayer_altar       Int?
  spellbook_altar    Int?
  guard              Int?
  torch              Int?
  dungeon_decoration Int?
  prison             Int?
  pool               Int?
  teleport           Int?
  garden_decoration  Int?
  amulet             Int?

  @@map("poh")
}

model SlayerTask {
  id                 Int      @id @default(autoincrement())
  created_at         DateTime @default(now()) @db.Timestamp(6)
  quantity           Int      @db.SmallInt
  quantity_remaining Int      @db.SmallInt
  slayer_master_id   Int      @db.SmallInt
  monster_id         Int
  skipped            Boolean
  user_id            String   @db.VarChar(19)
  new_user           NewUser  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: Cascade, map: "FK_43bf436cc70acda1752fb6e6006")

  @@index([user_id, quantity_remaining], map: "slayer_task_quantity_remaining")
  @@map("slayer_tasks")
}

enum bank_sort_method_enum {
  value
  alch
  name
  quantity
}

model User {
  item_map_key                  String?
  item_map                      Json?   @db.Json
  reverse_item_map              Json?   @db.Json
  leagues_completed_tasks_ids   Int[]
  leagues_completed_tasks_count Int     @default(0)
  cl_percent                    Float   @default(0)
  total_xp                      BigInt  @default(0)
  total_level                   Int?
  mastery                       Int     @default(0)

  id                 String    @id @db.VarChar(19)
  last_command_date  DateTime? @db.Timestamp(6)
  minion_bought_date DateTime? @db.Timestamp(6)
  minion_hasBought   Boolean   @default(false) @map("minion.hasBought")

  sacrificedValue BigInt @default(0)

  GP                     BigInt @default(0)
  QP                     Int    @default(0)
  bank                   Json   @default("{}") @db.Json
  collectionLogBank      Json   @default("{}") @db.JsonB
  blowpipe               Json   @default("{\"scales\":0,\"dartID\":null,\"dartQuantity\":0}") @db.Json
  slayer_unlocks         Int[]  @map("slayer.unlocks")
  slayer_blocked_ids     Int[]  @map("slayer.blocked_ids")
  slayer_last_task       Int    @default(0) @map("slayer.last_task")
  badges                 Int[]
  bitfield               Int[]
  minion_equippedPet     Int?   @map("minion.equippedPet")
  minion_farmingContract Json?  @map("minion.farmingContract") @db.Json
  minion_birdhouseTraps  Json?  @map("minion.birdhouseTraps") @db.Json
  finished_quest_ids     Int[]

  // Configs/Settings
  minion_defaultCompostToUse CropUpgradeType    @default(compost) @map("minion.defaultCompostToUse")
  auto_farm_filter           AutoFarmFilterEnum @default(AllFarm)
  favoriteItems              Int[]
  favorite_alchables         Int[]
  favorite_food              Int[]
  favorite_bh_seeds          Int[]
  minion_defaultPay          Boolean            @default(false) @map("minion.defaultPay")
  minion_icon                String?            @map("minion.icon")
  minion_name                String?            @map("minion.name")
  bank_bg_hex                String?
  bankBackground             Int                @default(1)
  attack_style               String[]
  combat_options             Int[]
  slayer_remember_master     String?            @map("slayer.remember_master")
  slayer_autoslay_options    Int[]              @map("slayer.autoslay_options")
  bank_sort_method           String?            @db.VarChar(16)
  bank_sort_weightings       Json               @default("{}") @db.Json

  // Skills
  skills_agility      BigInt @default(0) @map("skills.agility")
  skills_cooking      BigInt @default(0) @map("skills.cooking")
  skills_fishing      BigInt @default(0) @map("skills.fishing")
  skills_mining       BigInt @default(0) @map("skills.mining")
  skills_smithing     BigInt @default(0) @map("skills.smithing")
  skills_woodcutting  BigInt @default(0) @map("skills.woodcutting")
  skills_firemaking   BigInt @default(0) @map("skills.firemaking")
  skills_runecraft    BigInt @default(0) @map("skills.runecraft")
  skills_crafting     BigInt @default(0) @map("skills.crafting")
  skills_prayer       BigInt @default(0) @map("skills.prayer")
  skills_fletching    BigInt @default(0) @map("skills.fletching")
  skills_thieving     BigInt @default(0) @map("skills.thieving")
  skills_farming      BigInt @default(0) @map("skills.farming")
  skills_herblore     BigInt @default(0) @map("skills.herblore")
  skills_hunter       BigInt @default(0) @map("skills.hunter")
  skills_construction BigInt @default(0) @map("skills.construction")
  skills_magic        BigInt @default(0) @map("skills.magic")
  skills_ranged       BigInt @default(0) @map("skills.ranged")
  skills_attack       BigInt @default(0) @map("skills.attack")
  skills_strength     BigInt @default(0) @map("skills.strength")
  skills_defence      BigInt @default(0) @map("skills.defence")
  skills_slayer       BigInt @default(0) @map("skills.slayer")
  skills_hitpoints    BigInt @default(1154) @map("skills.hitpoints")

  // Gear
  gear_melee    Json? @map("gear.melee") @db.Json
  gear_mage     Json? @map("gear.mage") @db.Json
  gear_range    Json? @map("gear.range") @db.Json
  gear_misc     Json? @map("gear.misc") @db.Json
  gear_skilling Json? @map("gear.skilling") @db.Json
  gear_wildy    Json? @map("gear.wildy") @db.Json
  gear_fashion  Json? @map("gear.fashion") @db.Json
  gear_other    Json? @map("gear.other") @db.Json

  // Charges
  tentacle_charges       Int @default(0)
  sang_charges           Int @default(0)
  celestial_ring_charges Int @default(0)
  ash_sanctifier_charges Int @default(0)
  serp_helm_charges      Int @default(0)
  blood_fury_charges     Int @default(0)
  tum_shadow_charges     Int @default(0)
  blood_essence_charges  Int @default(0)
  trident_charges        Int @default(0)
  venator_bow_charges    Int @default(0)

  scythe_of_vitur_charges Int @default(0)

  // Balances
  lms_points           Int @default(0)
  volcanic_mine_points Int @default(0)
  nmz_points           Int @default(0)
  carpenter_points     Int @default(0)
  zeal_tokens          Int @default(0)
  slayer_points        Int @default(0) @map("slayer.points")

  completed_ca_task_ids Int[]

  // BSO
  nursery                  Json?    @db.Json
  selected_tame            Int?
  monkeys_fought           String[]
  emerged_inferno_attempts Int      @default(0)
  skills_dungeoneering     BigInt   @default(0) @map("skills.dungeoneering")
  ourania_tokens           Int      @default(0)
  dungeoneering_tokens     Int      @default(0)
  void_staff_charges       Int      @default(0)

  last_bonanza_date   DateTime? @db.Timestamp(6)
  painted_items_tuple Json?     @db.Json

  // Invention
  skills_invention          BigInt @default(0) @map("skills.invention")
  materials_owned           Json   @default("{}") @db.Json
  disassembled_items_bank   Json   @default("{}") @db.Json
  researched_materials_bank Json   @default("{}") @db.Json
  unlocked_blueprints       Int[]
  disabled_inventions       Int[]

  // Migrate
  farmingPatches_herb       Json? @map("farmingPatches.herb") @db.Json
  farmingPatches_fruit_tree Json? @map("farmingPatches.fruit tree") @db.Json
  farmingPatches_tree       Json? @map("farmingPatches.tree") @db.Json
  farmingPatches_allotment  Json? @map("farmingPatches.allotment") @db.Json
  farmingPatches_hops       Json? @map("farmingPatches.hops") @db.Json
  farmingPatches_cactus     Json? @map("farmingPatches.cactus") @db.Json
  farmingPatches_bush       Json? @map("farmingPatches.bush") @db.Json
  farmingPatches_spirit     Json? @map("farmingPatches.spirit") @db.Json
  farmingPatches_hardwood   Json? @map("farmingPatches.hardwood") @db.Json
  farmingPatches_seaweed    Json? @map("farmingPatches.seaweed") @db.Json
  farmingPatches_vine       Json? @map("farmingPatches.vine") @db.Json
  farmingPatches_calquat    Json? @map("farmingPatches.calquat") @db.Json
  farmingPatches_redwood    Json? @map("farmingPatches.redwood") @db.Json
  farmingPatches_crystal    Json? @map("farmingPatches.crystal") @db.Json
  farmingPatches_celastrus  Json? @map("farmingPatches.celastrus") @db.Json
  farmingPatches_hespori    Json? @map("farmingPatches.hespori") @db.Json
  farmingPatches_flower     Json? @map("farmingPatches.flower") @db.Json
  farmingPatches_mushroom   Json? @map("farmingPatches.mushroom") @db.Json
  farmingPatches_belladonna Json? @map("farmingPatches.belladonna") @db.Json

  skills_divination                BigInt    @default(0) @map("skills.divination")
  guthixian_cache_boosts_available Int       @default(0)
  disabled_portent_ids             Int[]
  portent                          Portent[]

  @@index([id, last_command_date])
  @@map("users")
}

model Webhook {
  channel_id    String @id @db.VarChar(19)
  webhook_id    String @db.VarChar(19)
  webhook_token String @db.VarChar(100)

  @@map("webhook_table")
}

model Minigame {
  id                      Int    @id @default(autoincrement())
  user_id                 String @unique @db.VarChar(19)
  tithe_farm              Int    @default(0)
  wintertodt              Int    @default(0)
  tempoross               Int    @default(0)
  sepulchre               Int    @default(0)
  fishing_trawler         Int    @default(0)
  barb_assault            Int    @default(0)
  pyramid_plunder         Int    @default(0)
  agility_arena           Int    @default(0)
  champions_challenge     Int    @default(0)
  mahogany_homes          Int    @default(0)
  gnome_restaurant        Int    @default(0)
  soul_wars               Int    @default(0)
  rogues_den              Int    @default(0)
  gauntlet                Int    @default(0)
  corrupted_gauntlet      Int    @default(0)
  castle_wars             Int    @default(0)
  raids                   Int    @default(0)
  raids_challenge_mode    Int    @default(0)
  magic_training_arena    Int    @default(0)
  big_chompy_bird_hunting Int    @default(0)
  temple_trekking         Int    @default(0)
  pest_control            Int    @default(0)
  inferno                 Int    @default(0)
  volcanic_mine           Int    @default(0)
  tears_of_guthix         Int    @default(0)
  tob                     Int    @default(0)
  tob_hard                Int    @default(0)
  lms                     Int    @default(0)
  trouble_brewing         Int    @default(0)
  puro_puro               Int    @default(0)
  giants_foundry          Int    @default(0)
  guardians_of_the_rift   Int    @default(0)
  nmz                     Int    @default(0)
  shades_of_morton        Int    @default(0)
  tombs_of_amascut        Int    @default(0)
  colosseum               Int    @default(0)

  // BSO
  ourania_delivery_service Int @default(0)
  monkey_rumble            Int @default(0)
  emerged_inferno          Int @default(0)
  fishing_contest          Int @default(0)
  bax_baths                Int @default(0)
  fist_of_guthix           Int @default(0)
  stealing_creation        Int @default(0)
  tinkering_workshop       Int @default(0)
  balthazars_big_bonanza   Int @default(0)
  depths_of_atlantis       Int @default(0)
  depths_of_atlantis_cm    Int @default(0)
  guthixian_cache          Int @default(0)
  turaels_trials           Int @default(0)

  new_user NewUser?

  @@index([user_id])
  @@map("minigames")
}

model TameActivity {
  id          Int      @id(map: "PK_ff3610ef0ab0a39a22496e130e9") @default(autoincrement())
  user_id     String   @db.VarChar(19)
  start_date  DateTime @db.Timestamp(6)
  finish_date DateTime @db.Timestamp(6)
  duration    Int
  completed   Boolean
  type        String   @db.VarChar
  channel_id  String   @db.VarChar(19)
  data        Json     @db.Json
  tame_id     Int
  tame        Tame     @relation(fields: [tame_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_aa012dd3d9d58b8acb4e2cffd4d")

  fake_duration Int?
  deaths        Int  @default(0)

  @@index([completed])
  @@index([tame_id])
  @@map("tame_activity")
}

model Tame {
  id                 Int         @id(map: "PK_1defac3bf951ca2b2de3f944702") @default(autoincrement())
  user_id            String      @db.VarChar(19)
  date               DateTime    @default(now()) @db.Timestamp(6)
  nickname           String?     @db.VarChar(64)
  species_id         Int
  growth_stage       tame_growth
  growth_percent     Float       @default(0)
  max_combat_level   Int
  max_artisan_level  Int
  max_gatherer_level Int
  max_support_level  Int
  max_total_loot     Json        @default("{}") @db.Json
  fed_items          Json        @default("{}") @db.Json
  species_variant    Int         @default(1)

  equipped_primary Int?
  equipped_armor   Int?

  total_cost Json @default("{}") @db.Json

  demonic_jibwings_saved_cost Json @default("{}") @db.JsonB
  third_age_jibwings_loot     Json @default("{}") @db.JsonB
  abyssal_jibwings_loot       Json @default("{}") @db.JsonB
  implings_loot               Json @default("{}") @db.JsonB
  elder_knowledge_loot_bank   Json @default("{}") @db.JsonB

  last_activity_date   DateTime? @db.Timestamp(6)
  levels_from_egg_feed Int?

  custom_icon_id String? @db.VarChar(19)

  tame_activity TameActivity[]

  @@index([user_id])
  @@map("tames")
}

model CommandUsage {
  id           Int      @id @default(autoincrement())
  date         DateTime @default(now()) @db.Timestamp(6)
  user_id      BigInt
  command_name String   @db.VarChar(32)
  is_continue  Boolean  @default(false)
  flags        Json?
  inhibited    Boolean? @default(false)

  is_mention_command Boolean @default(false)

  args       Json?   @db.Json
  channel_id BigInt?
  guild_id   BigInt?

  continue_delta_millis BigInt?

  @@map("command_usage")
}

model FishingContestCatch {
  id        Int      @id @default(autoincrement())
  user_id   BigInt
  name      String   @db.VarChar(64)
  date      DateTime @default(now()) @db.Timestamp(6)
  length_cm Int      @db.SmallInt

  @@map("fishing_contest_catch")
}

model LastManStandingGame {
  id       Int      @id @default(autoincrement())
  user_id  BigInt
  date     DateTime @default(now())
  position Int      @db.SmallInt
  kills    Int      @db.SmallInt

  @@map("lms_games")
}

model StashUnit {
  stash_id        Int
  user_id         BigInt
  items_contained Int[]
  has_built       Boolean

  @@unique([stash_id, user_id])
  @@map("stash_unit")
}

model UserStats {
  user_id                BigInt @id
  sell_gp                BigInt @default(0)
  items_sold_bank        Json   @default("{}") @db.Json
  puropuro_implings_bank Json   @default("{}") @db.Json
  passive_implings_bank  Json   @default("{}") @db.Json
  create_cost_bank       Json   @default("{}") @db.Json
  create_loot_bank       Json   @default("{}") @db.Json
  bird_eggs_offered_bank Json   @default("{}") @db.Json
  scattered_ashes_bank   Json   @default("{}") @db.Json

  gf_weapons_made Json @default("{}") @db.Json
  gf_cost         Json @default("{}") @db.Json
  gf_loot         Json @default("{}") @db.Json

  ash_sanctifier_prayer_xp BigInt @default(0)
  gotr_rift_searches       Int    @default(0)

  farming_plant_cost_bank   Json @default("{}") @db.Json
  farming_harvest_loot_bank Json @default("{}") @db.Json

  cl_array        Int[]
  cl_array_length Int   @default(0)

  // BSO
  bars_from_adze_bank    Json @default("{}") @db.Json
  ores_from_spirits_bank Json @default("{}") @db.Json
  bars_from_klik_bank    Json @default("{}") @db.Json
  portable_tanner_bank   Json @default("{}") @db.Json
  clue_upgrader_bank     Json @default("{}") @db.Json

  loot_from_zippy_bank Json @default("{}") @db.Json
  peky_loot_bank       Json @default("{}") @db.Json
  obis_loot_bank       Json @default("{}") @db.Json
  brock_loot_bank      Json @default("{}") @db.Json
  wilvus_loot_bank     Json @default("{}") @db.Json
  doug_loot_bank       Json @default("{}") @db.Json
  harry_loot_bank      Json @default("{}") @db.Json
  smokey_loot_bank     Json @default("{}") @db.Json
  doubled_loot_bank    Json @default("{}") @db.Json

  silverhawk_boots_passive_xp BigInt @default(0)
  bonecrusher_prayer_xp       BigInt @default(0)

  tame_cl_bank Json @default("{}") @db.JsonB

  tinker_workshop_mats_bank Json @default("{}") @db.Json

  buy_cost_bank Json @default("{}") @db.Json
  buy_loot_bank Json @default("{}") @db.Json

  tworkshop_material_cost_bank Json @default("{}") @db.Json
  tworkshop_xp_gained          Int  @default(0)

  shades_of_morton_cost_bank Json @default("{}") @db.Json

  gp_from_agil_pyramid Int @default(0)

  random_event_completions_bank Json @default("{}") @db.Json

  death_touched_darts_used Int @default(0)

  toa_attempts Int @default(0)

  toa_cost Json @default("{}") @db.Json
  toa_loot Json @default("{}") @db.Json

  total_toa_points           Int  @default(0)
  toa_raid_levels_bank       Json @default("{}") @db.Json
  total_toa_duration_minutes Int  @default(0)

  on_task_monster_scores           Json @default("{}") @db.Json
  on_task_with_mask_monster_scores Json @default("{}") @db.Json
  deaths                           Int  @default(0)
  pk_evasion_exp                   Int  @default(0)
  fight_caves_attempts             Int  @default(0)
  firecapes_sacrificed             Int  @default(0)
  tithe_farms_completed            Int  @default(0)
  tithe_farm_points                Int  @default(0)
  pest_control_points              Int  @default(0)
  inferno_attempts                 Int  @default(0)
  infernal_cape_sacrifices         Int  @default(0)
  tob_attempts                     Int  @default(0)
  foundry_reputation               Int  @default(0)
  tob_hard_attempts                Int  @default(0)
  total_cox_points                 Int  @default(0)
  honour_level                     Int  @default(1)
  high_gambles                     Int  @default(0)
  honour_points                    Int  @default(0)

  slayer_task_streak       Int @default(0)
  slayer_wildy_task_streak Int @default(0)
  slayer_superior_count    Int @default(0)
  slayer_unsired_offered   Int @default(0)
  slayer_chewed_offered    Int @default(0)

  creature_scores Json @default("{}")
  monster_scores  Json @default("{}")
  laps_scores     Json @default("{}")
  sacrificed_bank Json @default("{}")
  openable_scores Json @default("{}")

  last_daily_timestamp           BigInt @default(0)
  last_tears_of_guthix_timestamp BigInt @default(0)

  herbs_cleaned_while_farming_bank Json @default("{}") @db.Json

  forestry_event_completions_bank Json @default("{}") @db.Json

  doa_attempts             Int  @default(0)
  doa_cost                 Json @default("{}")
  doa_loot                 Json @default("{}")
  doa_room_attempts_bank   Json @default("{}") @db.Json
  doa_total_minutes_raided Int  @default(0)

  chincannon_destroyed_loot_bank Json     @default("{}") @db.Json
  comp_cape_percent              Decimal?
  untrimmed_comp_cape_percent    Decimal?

  god_favour_bank           Json? @db.Json
  god_items_sacrificed_bank Json  @default("{}") @db.Json

  xp_from_graceful_portent         BigInt @default(0)
  xp_from_dungeon_portent          BigInt @default(0)
  xp_from_mining_portent           BigInt @default(0)
  xp_from_hunter_portent           BigInt @default(0)
  loot_from_rogues_portent         Json   @default("{}") @db.JsonB
  loot_from_lucky_portent          Json   @default("{}") @db.JsonB
  loot_destroyed_by_hunter_portent Json   @default("{}") @db.JsonB
  divination_loot                  Json   @default("{}") @db.JsonB

  octo_loot_bank Json @default("{}") @db.Json

  turaels_trials_cost_bank Json @default("{}") @db.Json
  turaels_trials_loot_bank Json @default("{}") @db.Json

  colo_cost      Json @default("{}") @db.Json
  colo_loot      Json @default("{}") @db.Json
  colo_kc_bank   Json @default("{}") @db.Json
  colo_max_glory Int?

  quivers_sacrificed Int @default(0)

  @@map("user_stats")
}

enum CropUpgradeType {
  compost
  supercompost
  ultracompost
}

enum activity_type_enum {
  Agility
  Cooking
  MonsterKilling
  GroupMonsterKilling
  ClueCompletion
  Fishing
  Mining
  Smithing
  Woodcutting
  Questing
  Firemaking
  Runecraft
  TiaraRunecraft
  Smelting
  Crafting
  Burying
  Scattering
  Offering
  FightCaves
  Wintertodt
  Tempoross
  TitheFarm
  Fletching
  Pickpocket
  Herblore
  Hunter
  Birdhouse
  Alching
  Raids
  AnimatedArmour
  Cyclops
  Sawmill
  Butler
  Nightmare
  Sepulchre
  Plunder
  FishingTrawler
  Zalcano
  Farming
  Construction
  Enchanting
  Casting
  GloryCharging
  WealthCharging
  BarbarianAssault
  AgilityArena
  ChampionsChallenge
  AerialFishing
  DriftNet
  MahoganyHomes
  Nex
  GnomeRestaurant
  SoulWars
  RoguesDenMaze
  KalphiteKing
  Gauntlet
  Dungeoneering
  CastleWars
  MageArena
  Collecting
  MageTrainingArena
  CutLeapingFish
  MotherlodeMining
  BlastFurnace
  MageArena2
  BigChompyBirdHunting
  KingGoldemar
  VasaMagus
  OuraniaDeliveryService
  DarkAltar
  Ignecarus
  Trekking
  KibbleMaking
  Revenants
  PestControl
  VolcanicMine
  MonkeyRumble
  BossEvent
  KourendFavour
  Inferno
  TearsOfGuthix
  TheatreOfBlood
  LastManStanding
  FishingContest
  BirthdayEvent
  TrickOrTreat
  TokkulShop
  TroubleBrewing
  PuroPuro
  Easter
  BaxtorianBathhouses
  Naxxus
  Disassembling
  Research
  Moktang
  ShootingStars
  FistOfGuthix
  StealingCreation
  HalloweenMiniMinigame
  GiantsFoundry
  GuardiansOfTheRift
  TinkeringWorkshop
  HalloweenEvent
  NightmareZone
  ShadesOfMorton
  TombsOfAmascut
  BalthazarsBigBonanza
  UnderwaterAgilityThieving
  DepthsOfAtlantis
  StrongholdOfSecurity
  BirthdayCollectIngredients
  CombatRing
  SpecificQuest
  Mortimer
  CamdozaalFishing
  CamdozaalMining
  CamdozaalSmithing
  MemoryHarvest
  GuthixianCache
  TuraelsTrials
  Colosseum
}

enum xp_gains_skill_enum {
  agility
  cooking
  fishing
  mining
  smithing
  woodcutting
  firemaking
  runecraft
  crafting
  prayer
  fletching
  farming
  herblore
  thieving
  hunter
  construction
  magic
  attack
  strength
  defence
  ranged
  hitpoints
  dungeoneering
  slayer
  invention
  divination
}

enum tame_growth {
  baby
  juvenile
  adult
}

enum AutoFarmFilterEnum {
  AllFarm
  Replant
}

model Portent {
  item_id Int

  user_id String @db.VarChar(19)
  user    User   @relation(fields: [user_id], references: [id])

  total_charges     Int
  charges_remaining Int

  @@unique([item_id, user_id])
  @@index([user_id])
  @@map("portent")
}

model ItemMetadata {
  id Int @id

  name String?

  @@map("item_metadata")
}

enum UserEventType {
  MaxXP
  MaxTotalXP
  MaxLevel
  MaxTotalLevel
  CLCompletion
}

model UserEvent {
  id   String   @id @default(uuid()) @db.Uuid
  date DateTime @default(now()) @db.Timestamp(6)

  user_id             String               @db.Text
  type                UserEventType
  skill               xp_gains_skill_enum?
  collection_log_name String?

  @@map("user_event")
}
